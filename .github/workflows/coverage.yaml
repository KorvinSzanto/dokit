name: Test Coverage

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      run: sudo apt update && sudo apt upgrade && sudo apt install lcov qtbase5-dev qtconnectivity5-dev
    - name: Build
      env: { CC: gcc, CXX: g++ }
      run: |
        cmake -D CMAKE_BUILD_TYPE=Release -D ENABLE_COVERAGE=ON -S "$GITHUB_WORKSPACE" -B "$RUNNER_TEMP"
        cmake --build "$RUNNER_TEMP"
    - name: Test
      run: ctest --verbose
      working-directory: ${{ runner.temp }}
    - name: Collate Coverage
      run: make coverage
      working-directory: ${{ runner.temp }}
    - name: Upload Coverage Tracefile
      uses: actions/upload-artifact@v3
      with:
        name: tracefile
        path: "${{ runner.temp }}/coverage.info"
        if-no-files-found: error
    - name: Generate HTML Report
      run: make coverage-html
      working-directory: ${{ runner.temp }}
    - name: Upload HTML Report
      uses: actions/upload-artifact@v3
      with:
        name: html-report
        path: "${{ runner.temp }}/coverage"
        if-no-files-found: warn

  update-coveralls:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Coverage Tracefile
      uses: actions/download-artifact@v3
      with:
        name: tracefile
    - name: Display structure of downloaded files
      run: ls -R
    - name: Submit to Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: "${{ runner.temp }}/coverage.info"

  update-doc-branch:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download HTML Report
      uses: actions/download-artifact@v3
      with:
        name: html-report
    - name: Display structure of downloaded files
      run: ls -R
    - name: Checkout doc Branch
      #if: ${{ github.ref == 'refs/heads/main' }}
      uses: actions/checkout@v3
      with:
        ref: doc
        path: doc
    - name: Install Coverage Report
      #if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        rm -rf "$GITHUB_WORKSPACE/doc/main/cov"
        cp -a "$RUNNER_TEMP/coverage" "$GITHUB_WORKSPACE/doc/main/cov"
        git -C "$GITHUB_WORKSPACE/doc" status
        git -C "$GITHUB_WORKSPACE/doc" diff
    - name: Push Updated doc Branch
      #if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        [[ -z $(git status --porcelain) ]] || {
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull
          git add .
          git commit -m "Update coverage report for ${GITHUB_SHA}"
          #git push
        }
      working-directory: ${{ github.workspace }}/doc
