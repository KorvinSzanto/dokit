name: Test Coverage

on: [push, pull_request]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      run: sudo apt update && sudo apt upgrade && sudo apt install lcov qtbase5-dev qtconnectivity5-dev
    - name: Build
      env: { CC: gcc, CXX: g++ }
      run: |
        cmake -D CMAKE_BUILD_TYPE=Release -D ENABLE_COVERAGE=ON -S "$GITHUB_WORKSPACE" -B "$RUNNER_TEMP"
        cmake --build "$RUNNER_TEMP"
    - name: Run tests
      run: |
        ctest --verbose
        gawk -Sf "$GITHUB_WORKSPACE/.github/workflows/test-summary.gawk" test/unit/*.tap >> "$GITHUB_STEP_SUMMARY"
      working-directory: ${{ runner.temp }}
    - name: Collate test coverage
      run: make coverage
      working-directory: ${{ runner.temp }}
    - name: Upload coverage tracefile
      uses: actions/upload-artifact@v3
      with:
        name: tracefile
        path: "${{ runner.temp }}/coverage.info"
        if-no-files-found: error
    - name: Generate HTML report
      run: |
        echo 'genhtml_sort = 0' >> ~/.lcovrc
        make coverage-html && ./removeHtmlDates.sh
      working-directory: ${{ runner.temp }}
    - name: Upload HTML report
      uses: actions/upload-artifact@v3
      with:
        name: html-report
        path: "${{ runner.temp }}/coverage"
        if-no-files-found: warn

  update-coveralls:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
    - uses: actions/checkout@v3
    - name: Download coverage tracefile
      uses: actions/download-artifact@v3
      with:
        name: tracefile
    - name: Report results to Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage.info

  update-doc-branch:
    runs-on: ubuntu-latest
    if: success() && (github.ref == 'refs/heads/main')
    needs: run-tests
    steps:
    - uses: actions/checkout@v3
      with: { ref: doc }
    - name: Clear previous coverage report
      run: rm -rf main/cov
    - name: Download HTML report
      uses: actions/download-artifact@v3
      with:
        name: html-report
        path: main/cov
    - name: Inspect changes # for diagnostics only.
      run: |
        git status
        git diff
    - name: Push updates
      run: |
        [[ -z $(git status --porcelain) ]] || {
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull
          git add .
          git commit -m "Update coverage report for ${GITHUB_SHA}"
          git push
        }
